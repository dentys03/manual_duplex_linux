#!/bin/bash
#Uncomment this to log to /var/log/cups/error_log
#set -x

#TODO:
# - figure out why and when printer is spitting one blank file.


# Output "Device Discovery" information on stdout:
if test "$#" = "0"
then
  echo 'direct duplex-print "Unknown" "(!) Manual_duplexer unit for linux. (!)"'
  exit 0
fi

#GET PRINTER AND USER FROM URI
#clip spaces
URI=${DEVICE_URI%% *}
# Extract the printer from the uri to which the job schould be sent from the URI.
# Clip the URI scheme (anything up to the first ':' character) and
# clip anything after the first '?' character
USE_PRINTER=${URI#*:}
USE_PRINTER=${USE_PRINTER%%\?*}

# Command line arguments
job="$1"
user="$2"
title="$3"
numcopies="$4"
options="$5"
filename="/var/spool/cups/duplex/$job.duplex"


lp_args=
for opt in $options
do
	lp_args="$lp_args -o $opt"
done

#test if file exists
while [ ! -f "$filename" ]
do
  sleep 1
done

page_count=$(pdfinfo "$filename" | grep Pages | awk '{print $2}')
echo "page count: $page_count"

#if only one page, just send the printing command
if [ $(( $page_count )) -eq 1 ]; then
    lp -s -d $USE_PRINTER -n "$numcopies" $lp_args -o collate=true -t "$title"-even "$filename"

#if more than one pages, print even pages first and show user interface
elif [ $(( $page_count )) -gt 1 ]; then
    lp -s -d $USE_PRINTER -n "$numcopies" $lp_args -o page-set=even -o collate=true -o outputorder=reverse -t "$title"-even "$filename"
    #show user interface
    if sudo -u $user zenity --question --title="$title" \
        --text="<big><b>Flip and reinsert the entire paper stack when printing has finished,\n\n then press Procceed.</b></big>\n\n\n\n
         Finding my work usefull?               <a href='https://www.paypal.com/paypalme2/nanonetK3'>Click here to buy me a cofee.</a>"\
        --icon-name="document-print" \
	    --window-icon "/usr/share/manual_duplex_linux/printer.png"\
        --ok-label="Proceed" --cancel-label="Cancel" --display=:0.0\
        --width=$(echo $(sudo -u $user xdpyinfo -display :0.0| grep dimensions | sed -r 's/^[^0-9]*([0-9]+).*$/\1/') / 2 | bc); then
    #printing odd
    lp -s -d $USE_PRINTER -n "$numcopies" $lp_args -o page-set=odd -o collate=true -o outputorder=reverse -t "$title"-odd "$filename"


## Printing even pages first makes this not to be needed.
##    My cups does this automagically
##       PRINT ONE BLANK.
#	if (( $page_count % 2 )); then
#       #All pages are odd. outputting a blank even
#       echo | lp -s -t "$filename"-blank
#    fi
	else
        echo >&2 User abort
        rm "$filename"
        exit 0
    fi
fi

rm "$filename"
exit 0
